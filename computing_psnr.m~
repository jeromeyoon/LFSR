% computing PSNR and ssim 

clear all
close all
border =6;
outputpath ='/research2/SPL/HCI/ang/allviews3/buddha';
ver_outputfiles = dir(fullfile(outputpath,'ang_ver_*'));
hor_outputfiles = dir(fullfile(outputpath,'ang_hor_*'));
views_outputfiles = dir(fullfile(outputpath,'ang_views_*'));
valpath  ='/research2/iccv2015/HCI/test';
valdata = dir(fullfile(valpath,'*.h5'));
LF = hdf5read(fullfile(valpath,valdata(1).name),'/LF');
LF = permute(LF,[5,4,3,2,1]);

%%%%%%%% vertical PSNR and SSIM %%%%%%%
sum_psnr =0.0;
sum_ssim =0.0;
min_psnr =100;
max_psnr =-100;
min_ssim =100;
max_ssim =-100;

for idx= 1:6 %length(ver_outputfiles)/2+1:length(ver_outputfiles)
    fprintf('vertical %d/%d \n',idx,6);
    gt= squeeze(LF(:,:,:))
   output = load(fullfile(outputpath,ver_outputfiles(idx).name));
   output =output.Predict;
   output =ycbcr2rgb(uint8(output*255));
   output = output(border:end-border,border:end-border,:);
   gt= gt(border:end-border,border:end-border,:);
   val_psnr =psnr_j(output,gt);
   val_ssim =ssim(output,gt);
   [min_psnr,max_psnr]=findminmax(val_psnr,min_psnr,max_psnr);
   sum_psnr = sum_psnr+val_psnr;
   [min_ssim,max_ssim]=findminmax(val_ssim,min_ssim,max_ssim);
   sum_ssim = sum_ssim+val_ssim;
end
    
%%%%%%%% horizontal PSNR and SSIM %%%%%%%
for idx= 1:length(hor_outputfiles)/2%length(hor_outputfiles)/2+1:length(hor_outputfiles)
    fprintf('horizontal %d/%d \n',idx,length(hor_outputfiles)/2);
   gt= gt_hor{idx};
   output = load(fullfile(outputpath,hor_outputfiles(idx).name));
   output =output.Predict;
   output =ycbcr2rgb(uint8(output*255));
  output = output(border:end-border,border:end-border,:);
   gt= gt(border:end-border,border:end-border,:);
    val_psnr =psnr_j(output,gt);
   val_ssim =ssim(output,gt);
   [min_psnr,max_psnr]=findminmax(val_psnr,min_psnr,max_psnr);
   sum_psnr = sum_psnr+val_psnr;
   [min_ssim,max_ssim]=findminmax(val_ssim,min_ssim,max_ssim);
   sum_ssim = sum_ssim+val_ssim;

end

%%%%%%%% views PSNR and SSIM %%%%%%%
for idx= 1:length(views_outputfiles)/2%length(views_outputfiles)/2+1:length(views_outputfiles)
    fprintf('4views %d/%d \n',idx,length(views_outputfiles)/2);
   gt= gt_views{idx};
   output = load(fullfile(outputpath,views_outputfiles(idx).name));
   output =output.Predict;
   output =ycbcr2rgb(uint8(output*255));
   output = output(border:end-border,border:end-border,:);
   gt= gt(border:end-border,border:end-border,:);
   val_psnr =psnr_j(output,gt);
   val_ssim =ssim(output,gt);
   [min_psnr,max_psnr]=findminmax(val_psnr,min_psnr,max_psnr);
   sum_psnr = sum_psnr+val_psnr;
   [min_ssim,max_ssim]=findminmax(val_ssim,min_ssim,max_ssim);
   sum_ssim = sum_ssim+val_ssim;

end

mean_psnr = sum_psnr/numfiles;
mean_ssim = sum_ssim/numfiles;
fprintf('min_psr: %.6f max_psnr: %.6f mean_psnr: %.6f min_ssim: %.6f max_ssim:%.6f mean_ssim: %.6f \n', ...
        min_psnr,max_psnr,mean_psnr,min_ssim,max_ssim,mean_ssim);
